package com.weathernews.Weather;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Calendar;

import com.weathernews.Weather.ThemeList.List2;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.CheckBox;

public class Startup extends Activity {

	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.noformat);
        boolean InstallBaseList = false;

        // Do something to Startup

        SharedPreferences prefs = getSharedPreferences(Const.PREFS_NAME, 0);

        if(prefs == null)
        	InstallBaseList = true;
        else
        	InstallBaseList = prefs.getBoolean("RUN", true);

        SharedPreferences.Editor prefs1 = getSharedPreferences(Const.PREFS_NAME, 0).edit();
        prefs1.putBoolean("START", false);
        prefs1.putBoolean("USE_GPS", false);

        if(InstallBaseList) {
        	Calendar cl = Calendar.getInstance();
        	String Temp = "11B10101" + "\t" + "서울" + "\t" + "Asia/Seoul" + "\t" +
        				"--" + "\t" +  R.drawable.weather_icon_01_ref + "\t" +  "-999" + "\t" +
        				"-999" + "\t" + "-999";

        	prefs1.putString(Const.CITY_LIST + 0, Temp);

        	prefs1.putInt(Const.CITY_CNT, 1);

        	Temp = "MO023" + "\t" +  "11D20401" + "\t" + "설악산" + "\t" + "강원도 속초시" + "\t" +
        			"--" + "\t" + R.drawable.weather_icon_01_ref + "\t" + "--" + "\t" + "--" + "\t" + "--" + "\t" + Theme.THEME_MOUNTAIN;
        	prefs1.putString(Const.THEME_LIST + 0, Temp);
        	Temp = "BA000" + "\t" +  "11B10101" + "\t" + "잠실 야구장" + "\t" + "서울특별시 송파구 잠실1동 10" + "\t" +
					"--" + "\t" + R.drawable.weather_icon_01_ref + "\t" + "--" + "\t" + "--" + "\t" + "--" + "\t" + Theme.THEME_BASEBALL;
        	prefs1.putString(Const.THEME_LIST + 1, Temp);
        	Temp = "PA000" + "\t" +  "11B20601" + "\t" + "에버랜드" + "\t" + "경기도 용인시 처인구 포곡읍 전대리 310" + "\t" +
        			"--" + "\t" + R.drawable.weather_icon_01_ref + "\t" + "--" + "\t" + "--" + "\t" + "--" + "\t" + Theme.THEME_THEMEPARK;
        	prefs1.putString(Const.THEME_LIST + 2, Temp);

        	prefs1.putInt(Const.THEME_CNT, 3);

        	prefs1.putLong(Const.UPDATE_TIME_LIST, 0);
        	prefs1.putLong(Const.THEME_LIST_UPDATETIME, 0);

        	prefs1.putBoolean("RUN", false);
        }
        prefs1.commit();


        Intent intent = new Intent(Startup.this, TabRoot.class);
        intent.putExtra("FIRST", true);
		startActivity(intent);
		finish();

//        SharedPreferences prefs = getSharedPreferences(Const.PREFS_NAME, 0);
//        boolean hideInfo = false;
//        hideInfo = prefs.getBoolean("INFO", false);
//        if(!hideInfo)
//        	showInfo();
//        checkVersion();
	}

	private void checkVersion() {
		// TODO Auto-generated method stub
    	PackageManager pm = getPackageManager();
        int vc = 0;
        String vn = "";
        try {
        	PackageInfo pi = pm.getPackageInfo(getPackageName(), 0);
        	//Log.d("myTag", "UserID = " + pi.sharedUserId);

        	vc = pi.versionCode;
        	vn = pi.versionName;
        } catch (NameNotFoundException e) {
        	e.printStackTrace();
        	return;
        }

        //Log.d("myTag", "Ver int=" + vc + " ver str=" + vn);

		InputStream fis;

		//Log.d("myTag", "URL:" + getString(R.string.vercheck));

		fis = Util.getByteArrayFromURL(getString(R.string.vercheck));

		BufferedReader in;

		in = new BufferedReader(new InputStreamReader(fis));

		String data = "";
		try {
			data = in.readLine();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		String[] Version;
		if(data.length() > 0) {
			//Log.d("myTag", data);
			Version = data.split(",");
			try{
				if(Integer.parseInt(Version[0]) > vc) {
					AlertDialog.Builder alert = new AlertDialog.Builder(this);
			    	alert.setTitle( "업그레이드 정보" );
			    	alert.setMessage("새로운버전(" + Version[1] + ")으로 업그레이드 할 수 있습니다. T-Store에 접속하여 업그레이드하세요.");

			    	alert.setPositiveButton( "확인", new DialogInterface.OnClickListener() {
			    		@Override
			    	    public void onClick( DialogInterface dialog, int which) {
			    			Intent intent = new Intent(Startup.this, Weather.class);
			    			intent.putExtra("FIRST", true);
			    			startActivity(intent);
			    			finish();
			    	        dialog.dismiss();
			    	        dialog.dismiss();
			    	    }
			    	});

			    	alert.show();
				}
			} catch(NumberFormatException e){
				e.printStackTrace();
				//Log.d("myTag", e.toString());
				Intent intent = new Intent(Startup.this, Weather.class);
				intent.putExtra("FIRST", true);
				startActivity(intent);
				finish();
			}
		}else {
			Intent intent = new Intent(Startup.this, Weather.class);
			intent.putExtra("FIRST", true);
			startActivity(intent);
			finish();
		}
	}

	public void showInfo() {
        Context mContext = getApplicationContext();
        LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(LAYOUT_INFLATER_SERVICE);
        View layout = inflater.inflate(R.layout.custom_dialog,(ViewGroup) findViewById(R.id.layout_root));
        final CheckBox check = (CheckBox) findViewById(R.id.custom_check);

        AlertDialog.Builder alert = new AlertDialog.Builder(this);
    	alert.setTitle( "이용안내" );
    	alert.setView(layout);
    	//alert.setCustomTitle(layout_top);

    	alert.setIcon(R.drawable.ic_dialog_menu_generic);

    	alert.setPositiveButton( "확인", new DialogInterface.OnClickListener() {
    		@Override
    	    public void onClick( DialogInterface dialog, int which) {
    			boolean hideInfo = true;
//    			hideInfo = check.isChecked();
    			SharedPreferences.Editor prefs1 = getSharedPreferences(Const.PREFS_NAME, 0).edit();
    			prefs1.putBoolean("INFO", hideInfo);
    			prefs1.commit();
    			Intent intent = new Intent(Startup.this, Weather.class);
    			intent.putExtra("FIRST", true);
    			startActivity(intent);
    			finish();
    	        dialog.dismiss();
    	    }
    	});

    	AlertDialog ad = alert.create();
    	ad.show();
    }
}
